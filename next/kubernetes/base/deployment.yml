apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${BUILD_REPOSITORY_NAME}-app
  namespace: ${NAMESPACE}
  labels:
    service: app
spec:
  selector:
    matchLabels:
      service: app
  template:
    metadata:
      labels:
        service: app
    spec:
      containers:
        - image: ${IMAGE_TAG}
          name: app
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: ${INTERNAL_APP_PORT}
          resources:
            limits:
              cpu: 900m
              memory: 8Gi
            requests:
              cpu: ${NEXT_CPU_REQUESTS}
              memory: ${NEXT_MEMORY_REQUESTS}
          envFrom:
            - configMapRef:
                name: ${BUILD_REPOSITORY_NAME}-env
            - secretRef:
                name: faro-api-key
            - secretRef:
                name: minio-secret-standalone
          readinessProbe:
            httpGet:
              path: /api/healthcheck
              port: ${INTERNAL_APP_PORT}
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
        - image: ${IMAGE}-storybook:${GITHUB_SHA}
          name: storybook
          imagePullPolicy: IfNotPresent
          ports:
            - name: storybook
              containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: storybook-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: storybook-nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: storybook-nginx-conf
          configMap:
            name: ${BUILD_REPOSITORY_NAME}-storybook-nginx-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ${IMAGE_PULL_SECRET}
envFrom:
  - secretRef:
      name: ${BUILD_REPOSITORY_NAME}-meilisearch-secret
  - configMapRef:
      name: ${BUILD_REPOSITORY_NAME}-meilisearch
