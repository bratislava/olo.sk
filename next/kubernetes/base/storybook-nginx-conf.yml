apiVersion: v1
kind: ConfigMap
metadata:
  name: ${BUILD_REPOSITORY_NAME}-storybook-nginx-conf
  namespace: ${NAMESPACE}
  labels:
    service: storybook
data:
  default.conf: |
    server {
        listen       8080;
        server_name  localhost;

      location ~ ^/storybook$ {
          # needs specific redirect to `/` as routes without
          # trailing `/` do not work
          return 301 $scheme://$host/storybook/;
      }

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
          rewrite ^/storybook(.*)$ /$1 last;
      }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /tmp/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
