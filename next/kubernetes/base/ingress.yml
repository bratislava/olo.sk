apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${BUILD_REPOSITORY_NAME}-ingress
  namespace: ${NAMESPACE}
  labels:
    service: app
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    cert-manager.io/issue-temporary-certificate: 'true'
    kubernetes.io/ingress.class: haproxy
spec:
  tls:
    - hosts:
        - ${BRATISKA_HOSTNAME}
        - www.${BRATISKA_HOSTNAME}
        - ${BUILD_REPOSITORY_NAME}-meilisearch.${DEPLOYMENT_ENV}bratislava.sk
      secretName: ${BUILD_REPOSITORY_NAME}-tls
  rules:
    - host: ${BRATISKA_HOSTNAME}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: ${BUILD_REPOSITORY_NAME}-app
                port:
                  number: 80
    - host: www.${BRATISKA_HOSTNAME}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: ${BUILD_REPOSITORY_NAME}-app
                port:
                  number: 80
    - host: ${BRATISKA_HOSTNAME}
      http:
        paths:
          - path: /storybook
            pathType: ImplementationSpecific
            backend:
              service:
                name: ${BUILD_REPOSITORY_NAME}-storybook
                port:
                  number: 8080
    - host: www.${BRATISKA_HOSTNAME}
      http:
        paths:
          - path: /storybook
            pathType: ImplementationSpecific
            backend:
              service:
                name: ${BUILD_REPOSITORY_NAME}-storybook
                port:
                  number: 8080
    - host: ${BUILD_REPOSITORY_NAME}-meilisearch.${DEPLOYMENT_ENV}bratislava.sk
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: ${BUILD_REPOSITORY_NAME}-meilisearch
                port:
                  number: 80
